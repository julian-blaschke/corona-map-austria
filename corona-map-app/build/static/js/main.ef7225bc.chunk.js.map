{"version":3,"sources":["components/Map.js","config.js","data/DistrictLocationValues.js","components/App.js","hooks/index.js","serviceWorker.js","index.js"],"names":["initialViewState","longitude","latitude","zoom","pitch","bearing","data","useState","hovered","setHovered","pointerx","pointery","setPosition","heatmap","HeatmapLayer","id","intensity","radiusPixels","getPosition","d","parseFloat","lon","lat","getWeight","parseInt","cases","hex","HexagonLayer","radius","elevationScale","opacity","extruded","getElevationValue","getColorValue","pickable","onHover","info","x","y","object","points","controller","layers","mapboxApiAccessToken","style","position","zIndex","pointerEvents","left","top","name","App","setCases","loading","setLoading","useEffect","Papa","parse","proxyurl","download","header","complete","results","withLocations","map","district","index","Anzahl","Bezirk","locations","splice","useCasesPerDistrict","title","subTitle","backgroundColor","extra","placement","href","GithubOutlined","AreaChartOutlined","width","textAlign","Map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef7225bc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactMapGl from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { HeatmapLayer, HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport { mapboxApiAccessToken } from \"../config\";\n\nconst austria = {\n  lng: 14.550072,\n  lat: 47.516232,\n};\n//center of austria\nconst initialViewState = {\n  longitude: austria.lng,\n  latitude: austria.lat,\n  zoom: 6,\n  //tilt\n  pitch: 20,\n  bearing: 0,\n};\n\nexport default function ({ data }) {\n  let [hovered, setHovered] = useState();\n  let [{ pointerx, pointery }, setPosition] = useState({});\n\n  //tooltip\n  function renderTooltip() {\n    return (\n      hovered && (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 100,\n            pointerEvents: \"none\",\n            left: pointerx,\n            top: pointery + 40,\n          }}\n        >\n          <strong>{hovered.name}</strong> hat insgesamt{\" \"}\n          <strong>{hovered.cases}</strong> FÃ¤lle.\n        </div>\n      )\n    );\n  }\n\n  //heatmap\n  let heatmap = new HeatmapLayer({\n    id: \"heatmap\",\n    data,\n    intensity: 5,\n    radiusPixels: 70,\n    getPosition: (d) => [parseFloat(d.lon), parseFloat(d.lat)],\n    getWeight: (d) => parseInt(d.cases),\n  });\n\n  //hexagon layer\n  let hex = new HexagonLayer({\n    id: \"hexagon\",\n    data,\n    radius: 4000,\n    elevationScale: 100,\n    opacity: 0.7,\n    extruded: true,\n    getPosition: (d) => [parseFloat(d.lon), parseFloat(d.lat)],\n    getElevationValue: (d) => parseInt(d[0].cases),\n    getColorValue: (d) => parseInt(d[0].cases),\n    pickable: true,\n    onHover: (info) => {\n      setPosition({ pointerx: info?.x, pointery: info?.y });\n      setHovered(info?.object?.points[0]);\n    },\n  });\n\n  return (\n    <DeckGL\n      initialViewState={initialViewState}\n      controller={true}\n      layers={[hex, heatmap]}\n    >\n      <ReactMapGl mapboxApiAccessToken={mapboxApiAccessToken}>\n        {renderTooltip()}\n      </ReactMapGl>\n    </DeckGL>\n  );\n}\n","export const mapboxApiAccessToken =\n  \"pk.eyJ1IjoianVsaWFuLWJsYXNjaGtlIiwiYSI6ImNrNGtkZWVpMTA5Y2Iza2w1bTUzODA2cmQifQ.IfY_xaD3vM5ITan0vrlKvA\";\nexport const mapBoxStyleUrl =\n  \"mapbox://styles/julian-blaschke/ck9msyq2u0cet1imo4xdddbrh\";\n","export default [\n  { lat: \"48.0\", lon: \"14.7666667\" },\n  { lat: \"47.95\", lon: \"16.2\" },\n  { lat: \"47.1\", lon: \"9.8666667\" },\n  { lat: \"48.257778\", lon: \"13.034111\" },\n  { lat: \"47.45\", lon: \"9.9166667\" },\n  { lat: \"48.05\", lon: \"16.7\" },\n  { lat: \"47.606323198\", lon: \"15.672339989\" },\n  { lat: \"46.815559105\", lon: \"15.213503972\" },\n  { lat: \"47.4166667\", lon: \"9.7330556\" },\n  { lat: \"48.3\", lon: \"13.9666667\" },\n  { lat: \"47.8452778\", lon: \"16.5247223\" },\n  { lat: \"47.8333333\", lon: \"16.5833333\" },\n  { lat: \"47.3666667\", lon: \"9.6666667\" },\n  { lat: \"46.7166667\", lon: \"14.1\" },\n  { lat: \"48.5117\", lon: \"14.5050\" },\n  { lat: \"48.3422222\", lon: \"16.7205556\" },\n  { lat: \"46.9067\", lon: \"13.535\" },\n  { lat: \"47.75\", lon: \"13.75\" },\n  { lat: \"47.072331331\", lon: \"15.439072712\" },\n  { lat: \"47.072331331\", lon: \"15.439072712\" },\n  { lat: \"48.2666667\", lon: \"13.8\" },\n  { lat: \"47.059445\", lon: \"16.323889\" },\n  { lat: \"47.6\", lon: \"13.3\" },\n  { lat: \"47.050409811\", lon: \"16.077647430\" },\n  { lat: \"46.6\", lon: \"13.1333333\" },\n  { lat: \"48.5830556\", lon: \"16.0830556\" },\n  { lat: \"48.75\", lon: \"15.7\" },\n  { lat: \"47.0833333\", lon: \"10.8666667\" },\n  { lat: \"47.2\", lon: \"11.3333333\" },\n  { lat: \"47.2666667\", lon: \"11.4\" },\n  { lat: \"46.937225\", lon: \"16.141665\" },\n  { lat: \"48.1430\", lon: \"13.7420\" },\n  { lat: \"47.4333333\", lon: \"12.3833333\" },\n  { lat: \"46.6333333\", lon: \"14.2\" },\n  { lat: \"46.6247222\", lon: \"14.3052778\" },\n  { lat: \"48.4166667\", lon: \"16.3\" },\n  { lat: \"48.4\", lon: \"15.5833333\" },\n  { lat: \"48.5\", lon: \"15.5\" },\n  { lat: \"47.5\", lon: \"12.0333333\" },\n  { lat: \"47.0666667\", lon: \"10.4666667\" },\n  { lat: \"46.6856\", lon: \"14.4068\" },\n  { lat: \"46.9372\", lon: \"13.6033\" },\n  { lat: \"46.9\", lon: \"12.5\" },\n  { lat: \"47.568500845\", lon: \"14.236361022\" },\n  { lat: \"47.9166667\", lon: \"15.6\" },\n  { lat: \"48.284440\", lon: \"14.316100\" },\n  { lat: \"48.1666667\", lon: \"14.3\" },\n  { lat: \"47.7333333\", lon: \"16.4333333\" },\n  { lat: \"48.1666667\", lon: \"15.2666667\" },\n  { lat: \"48.6667\", lon: \"14.9333333\" },\n  { lat: \"48.0666667\", lon: \"16.25\" },\n  { lat: \"48.2770\", lon: \"13.4966\" },\n  { lat: \"47.168208496\", lon: \"14.662096754\" },\n  { lat: \"47.65\", lon: \"16.0333333\" },\n  { lat: \"47.0830\", lon: \"16.1750\" },\n  { lat: \"47.5\", lon: \"16.516667\" },\n  { lat: \"47.287778\", lon: \"16.203056\" },\n  { lat: \"48.2666667\", lon: \"14.7666667\" },\n  { lat: \"47.206\", lon: \"10.76\" },\n  { lat: \"46.996889\", lon: \"13.619069\" },\n  { lat: \"47.7088\", lon: \"16.4247\" },\n  { lat: \"47.4166667\", lon: \"13.25\" },\n  { lat: \"47.7833333\", lon: \"13.1666667\" },\n  { lat: \"47.348970\", lon: \"13.202220\" },\n  { lat: \"48.2\", lon: \"15.7\" },\n  { lat: \"48.2\", lon: \"15.6166667\" },\n  { lat: \"46.76715\", lon: \"14.358636\" },\n  { lat: \"48.4333333\", lon: \"13.6\" },\n  { lat: \"47.9\", lon: \"15.15\" },\n  { lat: \"47.2666667\", lon: \"11.7666667\" },\n  { lat: \"46.85\", lon: \"13.3333333\" },\n  { lat: \"47.9\", lon: \"14.4666667\" },\n  { lat: \"47.9\", lon: \"14.4666667\" },\n  { lat: \"47.25\", lon: \"15.1666667\" },\n  { lat: \"47.15\", lon: \"13.7\" },\n  { lat: \"48.3\", lon: \"16.0\" },\n  { lat: \"48.4\", lon: \"14.2833333\" },\n  { lat: \"46.6666667\", lon: \"13.8333333\" },\n  { lat: \"46.6102778\", lon: \"13.8558333\" },\n  { lat: \"47.9166667\", lon: \"13.55\" },\n  { lat: \"47.049297566\", lon: \"15.149467381\" },\n  { lat: \"46.55\", lon: \"14.6666667\" },\n  { lat: \"48.8333333\", lon: \"15.4\" },\n  { lat: \"47.9666667\", lon: \"14.7666667\" },\n  { lat: \"47.221431358\", lon: \"15.622450746\" },\n  { lat: \"46.9766\", lon: \"14.3514\" },\n  { lat: \"48.13\", lon: \"13.93\" },\n  { lat: \"48.1333333\", lon: \"16.5\" },\n  { lat: \"47.8\", lon: \"16.25\" },\n  { lat: \"47.8\", lon: \"16.25\" },\n  { lat: \"46.8333333\", lon: \"14.8333333\" },\n  { lat: \"47.2833333\", lon: \"12.7\" },\n  { lat: \"48.6\", lon: \"15.1666667\" },\n];\n","import React from \"react\";\nimport Map from \"./Map\";\nimport { PageHeader, Spin, Tooltip, Layout } from \"antd\";\nimport { useCasesPerDistrict } from \"../hooks\";\nimport { GithubOutlined, AreaChartOutlined } from \"@ant-design/icons\";\n\nfunction App() {\n  let { cases, loading } = useCasesPerDistrict();\n  return (\n    <div>\n      <PageHeader\n        title=\"Corona Map\"\n        subTitle=\"aktuelle FÃ¤lle je Bezirk\"\n        style={{ zIndex: 5, backgroundColor: \"#ffffff8c\" }}\n        extra={[\n          <Tooltip title=\"zum Repository\" placement=\"bottomLeft\">\n            <a href=\"https://github.com/julian-blaschke/corona-map-austria\">\n              <GithubOutlined></GithubOutlined>\n            </a>\n          </Tooltip>,\n          <Tooltip\n            title=\"zur Datenquelle (Ãsterreichisches COVID-19 Open Data Informationsportal)\"\n            placement=\"bottomLeft\"\n          >\n            <a href=\"https://www.data.gv.at/covid-19/\">\n              <AreaChartOutlined />\n            </a>\n          </Tooltip>,\n        ]}\n      ></PageHeader>\n      {loading ? (\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\n          <Spin></Spin>\n        </div>\n      ) : (\n        <Map data={cases}></Map>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport locations from \"../data/DistrictLocationValues\";\nimport Papa from \"papaparse\";\n\nexport const useCasesPerDistrict = function () {\n  const [cases, setCases] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  const url = \"https://info.gesundheitsministerium.at/data/Bezirke.csv\";\n\n  useEffect(() => {\n    Papa.parse(proxyurl + url, {\n      download: true,\n      header: true,\n      complete: function (results) {\n        //map with location values\n        let withLocations = results.data.map((district, index) => {\n          if (index < 93) {\n            return {\n              cases: district.Anzahl,\n              name: district.Bezirk,\n              lat: locations[index].lat,\n              lon: locations[index].lon,\n            };\n          }\n        });\n        withLocations.splice(93);\n        setCases(withLocations);\n        setLoading(false);\n      },\n    });\n  }, []);\n  return { cases, loading };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles/App.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}